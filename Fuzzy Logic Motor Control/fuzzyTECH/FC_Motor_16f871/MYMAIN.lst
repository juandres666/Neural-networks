MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001         PROCESSOR 16F871
                      00002 
                      00003                 list            p=16F871
                      00004                 #include        <p16f871.inc>
                      00001         LIST
                      00002 ; P16F871.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00306         LIST
2007   3D3A           00005                 __config        0x3d3A
                      00006                 errorlevel      -302
                      00007 ;------------------------------------------------------------------------------
                      00008 ;- USER MAIN FILE                                                             -
                      00009 ;------------------------------------------------------------------------------
                      00010 
Warning[207]: Found label after column 1. (CODE_START)
  00000100            00011     CODE_START      EQU     0x100   ;code startadr for 16Cxx
Warning[207]: Found label after column 1. (RESET_ADR)
  00000000            00012     RESET_ADR       EQU     0x000   ;reset vector
                      00013 
Warning[207]: Found label after column 1. (FUZZY_RAM_START)
  00000020            00014     FUZZY_RAM_START EQU     0x020   ;first free RAM location for 16Cxx
                      00015 
                      00016 
                      00017         include "MOTORCON.var"        ;include preassembler variables
                      00001 ;-----------------------------------------------------------------------------
                      00002 ;----------------------- fuzzyTECH 5.52 MCU-MP Edition -----------------------
                      00003 ;-----------------------------------------------------------------------------
                      00004 ;------------------- Code Generator: Assembler Source Code -------------------
                      00005 ;--------------- Code Generation Date: Mon Nov 30 05:12:42 2009 --------------
                      00006 ;------------------------ Fuzzy Logic System: MOTORCON -----------------------
                      00007 ;-----------------------------------------------------------------------------
                      00008 ;---------- (c) 1991-2001 INFORM GmbH, Pascalstr. 23, D-52076 Aachen ---------
                      00009 ;-------- Inform Software Corp., 2001 Midwest Rd., Oak Brook, IL 60523 -------
                      00010 ;-----------------------------------------------------------------------------
                      00011 
  00000001            00012 FAMILY          EQU     1
  00000000            00013 BANKED          SET     0
  00000008            00014 RESOLUTION      EQU     8
  00000000            00015 LARGE_RT        EQU     0
                      00016                         
Warning[205]: Found directive in column 1. (include)
                      00017 include         "ftmp16xx.inc"  
                      00001         LIST
                      00002 ; FTMP16XX.INC  Restriction definition file     v4.1 Inform Software Corporation
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[205]: Found directive in column 1. (IFDEF)
Warning[207]: Found label after column 1. (RAM_START)
Warning[207]: Found label after column 1. (RAM_GAP_START)
Warning[207]: Found label after column 1. (RAM_END)
Warning[205]: Found directive in column 1. (ENDIF)
Warning[205]: Found directive in column 1. (IFNDEF)
Warning[205]: Found directive in column 1. (IF)
Warning[205]: Found directive in column 1. (IF)
Message[301]: MESSAGE: (MESSAGE: UNBANKED code is precompiled for banked processor type.)
Warning[207]: Found label after column 1. (RAM_END)
Warning[205]: Found directive in column 1. (ENDIF)
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00143         LIST
                      00144 
                      00018                         
                      00019 ;------ NOTE: FUZZY_RAM_START must be defined in the users main program ------
                      00020                         
Warning[205]: Found directive in column 1. (if)
                      00021 if FUZZY_RAM_START < RAM_START          
                      00022    ERROR  "First location for FUZZY_RAM_START is too low"           
                      00023 endif                   
                      00024                         
                      00025                 CBLOCK FUZZY_RAM_START  
  00000020            00026                   lv0_DatoError 
  00000021            00027                   lv1_DatoReferencia    
  00000022            00028                   lv2_DatoMotor 
  00000023            00029                   invalidflags  
                      00030                 ENDC    
                      00031                         
                      00032                 include "ftpubdec.var"  
                      00001         LIST
                      00002 ; FTPUBDEC.VAR  Global variable allocation file v4.1 Inform Software Corporation
Warning[207]: Found label after column 1. (MSB_LSB)
Warning[207]: Found label after column 1. (LSB_MSB)
Warning[207]: Found label after column 1. (loopcnt)
Warning[207]: Found label after column 1. (crisp)
Warning[207]: Found label after column 1. (min_tmp)
Warning[207]: Found label after column 1. (max_tmp)
Warning[207]: Found label after column 1. (num)
Warning[207]: Found label after column 1. (maxout)
Warning[207]: Found label after column 1. (rtptr)
Warning[207]: Found label after column 1. (itptr)
Warning[207]: Found label after column 1. (numHI)
Warning[207]: Found label after column 1. (FAARG)
Warning[207]: Found label after column 1. (res_div)
Warning[207]: Found label after column 1. (itcnt)
Warning[207]: Found label after column 1. (maxoutpos)
Warning[207]: Found label after column 1. (numLO)
Warning[207]: Found label after column 1. (FAARGLO)
Warning[207]: Found label after column 1. (res_divLO)
Warning[207]: Found label after column 1. (rulecount)
Warning[207]: Found label after column 1. (cur_term)
Warning[207]: Found label after column 1. (denom)
Warning[207]: Found label after column 1. (FBARG)
Warning[207]: Found label after column 1. (rt_table)
Warning[207]: Found label after column 1. (cur_term2)
Warning[207]: Found label after column 1. (denomLO)
Warning[207]: Found label after column 1. (FBARGLO)
Warning[207]: Found label after column 1. (rt_tableLO)
Warning[207]: Found label after column 1. (otcnt)
Warning[207]: Found label after column 1. (FTEMP)
Warning[207]: Found label after column 1. (mulcnd)
Warning[207]: Found label after column 1. (FREM)
Warning[207]: Found label after column 1. (mulplr)
Warning[207]: Found label after column 1. (cmp_reg)
Warning[207]: Found label after column 1. (FTcount)
Warning[207]: Found label after column 1. (offset)
Warning[207]: Found label after column 1. (otoffset)
Warning[207]: Found label after column 1. (no_o)
Warning[207]: Found label after column 1. (no_i)
Warning[207]: Found label after column 1. (tmp_var)
Warning[207]: Found label after column 1. (res_mpy)
Warning[207]: Found label after column 1. (res_mpyLO)
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00235         LIST
                      00236 
                      00033                         
                      00034                 CBLOCK  
  00000030            00035                   fuzvals   
                      00036                 ENDC    
                      00037                         
                      00038                         
                      00039                 CBLOCK fuzvals + .16    
  00000040            00040                   FUZZY_RAM_END 
                      00041                 ENDC    
                      00042                         
Warning[205]: Found directive in column 1. (if)
                      00043 if FUZZY_RAM_END > RAM_END          
                      00044    ERROR  "FUZZY_RAM_END exceeds internal RAM"          
                      00045 endif                   
                      00046                 include "ftpubdec.mac"  
                      00001         LIST
                      00002 ; FTPUBDEC.MAC  Macro definition file, Version 4.1   Inform Software Corporation
                      00887         LIST
                      00888 
                      00018 
                      00019         CBLOCK                      ;starts after fuzzy ram locations
  00000041            00020           user1                     ;reserve 1 byte (example)
                      00021             ENDC
                      00022 
0100                  00023         ORG CODE_START              ;example start adress for code
                      00024 
0100                  00025 mymain
0100   1683           00026                 bsf     STATUS,RP0
0101   3004           00027                 MOVLW   b'00000100'                     ;----,1canalRA0 Vref=VddVss
0102   009F           00028                 MOVWF   ADCON1
0103   1107           00029                 bcf             TRISC,2         ;PWMout
0104   30FF           00030                 MOVLW   0xFF            ;PWM Period=255
0105   0092           00031                 MOVWF   PR2
0106   1283           00032                 bcf     STATUS,RP0
                      00033 
0107   3007           00034         MOVLW   b'00000111'     ;'-,PstSkl:1---:1,TMR2on,PreSk16-.'
0108   0092           00035                 MOVWF   T2CON
                      00036 
0109   300C           00037                 MOVLW   b'00001100'     ;'0000,PWMMODE---.'
010A   0097           00038                 MOVWF   CCP1CON
                      00039 
010B   2205           00040                 call    initmotorcon           ;call init once
                      00041 
010C                  00042 main_loop
010C   3085           00043                 MOVLW   b'10000101'                     ;Fosc/32-,RA0--,Conv,-,ActivadoCAD
010D   009F           00044                 MOVWF   ADCON0
010E   191F           00045 STOP    btfsc   ADCON0,2                        ;ver si acaba de convertir
010F   290E           00046                 goto    STOP
0110   081E           00047                 movf    ADRESH,W
0111   00A0           00048         movwf   lv0_DatoError         ;set 1st crisp input
                      00049 
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0112   308D           00050                 MOVLW   b'10001101'                     ;Fosc/32-,RA1--,Conv,-,ActivadoCAD
0113   009F           00051                 MOVWF   ADCON0
0114   191F           00052 STOP1   btfsc   ADCON0,2                        ;ver si acaba de convertir
0115   2914           00053                 goto    STOP1
0116   081E           00054                 movf    ADRESH,W
0117   00A1           00055         movwf   lv1_DatoReferencia         ;set 2nd crisp input
                      00056 
0118   220E           00057         call    motorcon              ;call preassembler code
                      00058 
0119   0823           00059             movf    invalidflags,W
011A   1D03           00060         btfss   _Z                  ;test if the project is completely defined
011B   291F           00061             goto    case_no_fire
                      00062 
011C                  00063 case_fire           ;proj OK
011C   0822           00064         movf    lv2_DatoMotor,W        ;fetch crisp output
011D   0095           00065                 movwf   CCPR1L
                      00066 
011E   290C           00067             goto    main_loop
                      00068 
011F                  00069 case_no_fire
                      00070             ;no rule defined for this input combination
                      00071 
                      00072           ; call default_handling_routine
                      00073 
                      00074             ;user code
                      00075 
011F   290C           00076             goto    main_loop
                      00077 
                      00078 
                      00079         INCLUDE "MOTORCON.asm"        ;include preassembler code
                      00001 ;-----------------------------------------------------------------------------
                      00002 ;----------------------- fuzzyTECH 5.52 MCU-MP Edition -----------------------
                      00003 ;-----------------------------------------------------------------------------
                      00004 ;------------------- Code Generator: Assembler Source Code -------------------
                      00005 ;--------------- Code Generation Date: Mon Nov 30 05:12:42 2009 --------------
                      00006 ;------------------------ Fuzzy Logic System: MOTORCON -----------------------
                      00007 ;-----------------------------------------------------------------------------
                      00008 ;---------- (c) 1991-2001 INFORM GmbH, Pascalstr. 23, D-52076 Aachen ---------
                      00009 ;-------- Inform Software Corp., 2001 Midwest Rd., Oak Brook, IL 60523 -------
                      00010 ;-----------------------------------------------------------------------------
                      00011 
                      00012                         
                      00013                         
                      00014 ;------------------ slope term definition (x1, a_s, x3, d_s) -----------------
0120                  00015 tpts                    
0120   3400 3400 3464 00016                 DW      03400H, 03400H, 03464H, 0341EH
       341E 
0124   346D 3455 3473 00017                 DW      0346DH, 03455H, 03473H, 0342BH
       342B 
0128   347E 34FF 3480 00018                 DW      0347EH, 034FFH, 03480H, 034FFH
       34FF 
012C   3481 34FF 3483 00019                 DW      03481H, 034FFH, 03483H, 034FFH
       34FF 
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0130   3484 34FF 3486 00020                 DW      03484H, 034FFH, 03486H, 034FFH
       34FF 
0134   3487 34FF 3489 00021                 DW      03487H, 034FFH, 03489H, 034FFH
       34FF 
0138   348A 34AA 34FF 00022                 DW      0348AH, 034AAH, 034FFH, 03400H
       3400 
013C   3400 3400 3400 00023                 DW      03400H, 03400H, 03400H, 03408H
       3408 
0140   3400 3408 343F 00024                 DW      03400H, 03408H, 0343FH, 03408H
       3408 
0144   343F 3408 347F 00025                 DW      0343FH, 03408H, 0347FH, 03408H
       3408 
0148   347F 3408 34BF 00026                 DW      0347FH, 03408H, 034BFH, 03408H
       3408 
014C   34BF 3408 34FF 00027                 DW      034BFH, 03408H, 034FFH, 03400H
       3400 
                      00028 
                      00029 ;------------------------ xcom table (defuzzification) -----------------------
0150                  00030 xcom                    
0150   3400 343F 347F 00031                 DW      03400H, 0343FH, 0347FH, 034BFH, 034FFH
       34BF 34FF 
                      00032 
                      00033 ;--------------------------------- rule table --------------------------------
0155                  00034 rt0                     
0155   3423           00035                 DW      03423H
0156   3402 3401 3400 00036                 DW      03402H, 03401H, 03400H, 03407H, 0340CH
       3407 340C 
015B   3402 3401 3400 00037                 DW      03402H, 03401H, 03400H, 03408H, 0340CH
       3408 340C 
0160   3402 3401 3400 00038                 DW      03402H, 03401H, 03400H, 03409H, 0340CH
       3409 340C 
0165   3402 3401 3400 00039                 DW      03402H, 03401H, 03400H, 0340AH, 0340DH
       340A 340D 
016A   3402 3401 3400 00040                 DW      03402H, 03401H, 03400H, 0340BH, 0340EH
       340B 340E 
016F   3402 3401 3401 00041                 DW      03402H, 03401H, 03401H, 03407H, 0340CH
       3407 340C 
0174   3402 3401 3401 00042                 DW      03402H, 03401H, 03401H, 03408H, 0340CH
       3408 340C 
0179   3402 3401 3401 00043                 DW      03402H, 03401H, 03401H, 03409H, 0340DH
       3409 340D 
017E   3402 3401 3401 00044                 DW      03402H, 03401H, 03401H, 0340AH, 0340EH
       340A 340E 
0183   3402 3401 3401 00045                 DW      03402H, 03401H, 03401H, 0340BH, 0340FH
       340B 340F 
0188   3402 3401 3402 00046                 DW      03402H, 03401H, 03402H, 03407H, 0340CH
       3407 340C 
018D   3402 3401 3402 00047                 DW      03402H, 03401H, 03402H, 03408H, 0340DH
       3408 340D 
0192   3402 3401 3402 00048                 DW      03402H, 03401H, 03402H, 03409H, 0340EH
       3409 340E 
0197   3402 3401 3402 00049                 DW      03402H, 03401H, 03402H, 0340AH, 0340FH
       340A 340F 
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019C   3402 3401 3402 00050                 DW      03402H, 03401H, 03402H, 0340BH, 03410H
       340B 3410 
01A1   3402 3401 3403 00051                 DW      03402H, 03401H, 03403H, 03407H, 0340DH
       3407 340D 
01A6   3402 3401 3403 00052                 DW      03402H, 03401H, 03403H, 03408H, 0340EH
       3408 340E 
01AB   3402 3401 3403 00053                 DW      03402H, 03401H, 03403H, 03409H, 0340FH
       3409 340F 
01B0   3402 3401 3403 00054                 DW      03402H, 03401H, 03403H, 0340AH, 03410H
       340A 3410 
01B5   3402 3401 3403 00055                 DW      03402H, 03401H, 03403H, 0340BH, 03410H
       340B 3410 
01BA   3402 3401 3404 00056                 DW      03402H, 03401H, 03404H, 03407H, 0340EH
       3407 340E 
01BF   3402 3401 3404 00057                 DW      03402H, 03401H, 03404H, 03408H, 0340FH
       3408 340F 
01C4   3402 3401 3404 00058                 DW      03402H, 03401H, 03404H, 03409H, 03410H
       3409 3410 
01C9   3402 3401 3404 00059                 DW      03402H, 03401H, 03404H, 0340AH, 03410H
       340A 3410 
01CE   3402 3401 3404 00060                 DW      03402H, 03401H, 03404H, 0340BH, 03410H
       340B 3410 
01D3   3402 3401 3405 00061                 DW      03402H, 03401H, 03405H, 03407H, 0340FH
       3407 340F 
01D8   3402 3401 3405 00062                 DW      03402H, 03401H, 03405H, 03408H, 03410H
       3408 3410 
01DD   3402 3401 3405 00063                 DW      03402H, 03401H, 03405H, 03409H, 03410H
       3409 3410 
01E2   3402 3401 3405 00064                 DW      03402H, 03401H, 03405H, 0340AH, 03410H
       340A 3410 
01E7   3402 3401 3405 00065                 DW      03402H, 03401H, 03405H, 0340BH, 03410H
       340B 3410 
01EC   3402 3401 3406 00066                 DW      03402H, 03401H, 03406H, 03407H, 03410H
       3407 3410 
01F1   3402 3401 3406 00067                 DW      03402H, 03401H, 03406H, 03408H, 03410H
       3408 3410 
01F6   3402 3401 3406 00068                 DW      03402H, 03401H, 03406H, 03409H, 03410H
       3409 3410 
01FB   3402 3401 3406 00069                 DW      03402H, 03401H, 03406H, 0340AH, 03410H
       340A 3410 
0200   3402 3401 3406 00070                 DW      03402H, 03401H, 03406H, 0340BH, 03410H
       340B 3410 
                      00071 
                      00072 ;-------------------------------- initmotorcon -------------------------------
0205                  00073 initmotorcon            
                      00074                 FPREP_PAGE  .12
                          M     if      BANKED == 0
0205   303C               M             movlw   fuzvals + .12
                          M      if     FAMILY < 2
0206   0084               M         movwf   FSR
                          M      else
                          M         movwf   FSR0
                          M      endif
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M 
                          M      if     FAMILY == 0
                          M       if ((fuzvals + .12) < 0x20 )
                          M         movlw   fuzvals + .12
                          M       endif
                          M 
                          M       if ( ((fuzvals + .12) >= 0x20 ) && ((fuzvals + .12) < 0x2F ) )
                          M         movlw   fuzvals + .12 + 1 * RAM_GAP_SIZE
                          M       endif
                          M 
                          M       if ( ((fuzvals + .12) >= 0x30 ) && ((fuzvals + .12) < 0x3F ) )
                          M         movlw   fuzvals + .12 + 2 * RAM_GAP_SIZE
                          M       endif
                          M 
                          M       if ( ((fuzvals + .12) >= 0x40 ) && ((fuzvals + .12) < 0x4F ) )
                          M         movlw   fuzvals + .12 + 3 * RAM_GAP_SIZE
                          M       endif
                          M 
                          M             movwf   save_page
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M       if ((fuzvals + .12) < RAM_GAP_START )
                          M             movlw   fuzvals + .12
                          M       else
                          M             movlw   fuzvals + .12 + RAM_GAP_SIZE
                          M       endif
                          M             movwf   FSR
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M       if ((fuzvals + .12) < RAM_GAP_START )
                          M         bcf     BBANK
                          M             movlw   fuzvals + .12
                          M       else
                          M         bsf     BBANK
                          M         movlw   low (fuzvals + .12 + RAM_GAP_SIZE)
                          M       endif
                          M         movwf   FSR0
                          M      endif
                          M     endif
0207   3005           00075                 movlw   .5
0208   00A4           00076                 movwf   loopcnt
                      00077 initloop        FCLR_INC_FSR    
                          M     if      BANKED == 0
                          M      if     FAMILY < 2
0209   0180               M         clrf    0
020A   0A84               M             incf    FSR,F
                          M       if    RESOLUTION == 16
                          M         clrf    0
                          M             incf    FSR,F
                          M       endif
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M      else
                          M         clrf    INDF0,F
                          M       if    RESOLUTION == 16
                          M         clrf    INDF0,F
                          M       endif
                          M      endif
                          M 
                          M     else
                          M 
                          M      if     FAMILY == 0
                          M             SET_PAGE
                          M         clrf    0
                          M             incf        FSR,F
                          M             bsf         FSR,4
                          M             RES_PAGE
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M             LOCAL   p1_test
                          M             LOCAL   end_test
                          M         clrf    0
                          M             btfss   FSR,7
                          M             goto    p1_test
                          M             incf    FSR,F
                          M       if    RESOLUTION == 16
                          M         clrf    0
                          M             incf    FSR,F
                          M       endif
                          M             goto    end_test
                          M           p1_test
                          M         incf    FSR,F
                          M       if    RESOLUTION == 16
                          M         clrf    0
                          M             incf    FSR,F
                          M       endif
                          M         btfss   FSR,7
                          M             goto    end_test
                          M             movlw   RAM_GAP_SIZE
                          M         addwf   FSR,F
                          M           end_test
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         LOCAL   cross_page
                          M             SET_PAGE
                          M         clrf    INDF0,F
                          M       if    RESOLUTION == 16
                          M         clrf    INDF0,F
                          M       endif
                          M         movpf   FSR0,WREG
                          M         btfss   _Z
                          M         goto    cross_page
                          M         bsf     BBANK
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movlw   0x20
                          M         movwf   FSR0
                          M       cross_page
                          M             RES_PAGE
                          M      endif
                          M 
                          M     endif
020B   0BA4           00078                 decfsz  loopcnt,F   
020C   2A09           00079                 goto    initloop    
020D   0008           00080                 return  
                      00081                         
                      00082                         
                      00083 ;-----------------------------------------------------------------------------
020E                  00084 motorcon                
020E   3030           00085                 movlw   fuzvals
020F   0084           00086                 movwf   FSR
0210   01A5           00087                 clrf    itptr
                      00088 ;------------------------------- fuzzification -------------------------------
0211   3007           00089                 movlw   .7
0212   00A6           00090                 movwf   itcnt
0213   0820           00091                 movf    lv0_DatoError,W 
0214   00A4           00092                 movwf   crisp
0215   2233           00093                 call    flmss
                      00094                         
0216   3005           00095                 movlw   .5
0217   00A6           00096                 movwf   itcnt
0218   0821           00097                 movf    lv1_DatoReferencia,W    
0219   00A4           00098                 movwf   crisp
021A   2233           00099                 call    flmss
                      00100                         
                      00101 ;--------------------------------- inference ---------------------------------
                      00102                 LD_TBL16    rt0
                          M     if      FAMILY < 2
021B   3001               M             movlw   page rt0
021C   00A9               M             movwf   rt_table+1
021D   3055               M             movlw   (rt0)      & 0x0FF
021E   00A8               M             movwf   rt_table
                          M     else
                          M             movlw   page rt0
                          M             movwf   TBLPTRH
                          M             movlw   (rt0)      & 0x0FF
                          M             movwf   TBLPTRL
                          M     endif
                      00103                         
021F   2284           00104                 call    Min                        ;Max-Min
                      00105 ;------------------------------ defuzzification ------------------------------
0220   01A3           00106                 clrf    invalidflags    
0221   01AD           00107                 clrf    otoffset    
                      00108                 FPREP_PAGE  .12
                          M     if      BANKED == 0
0222   303C               M             movlw   fuzvals + .12
                          M      if     FAMILY < 2
0223   0084               M         movwf   FSR
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M      else
                          M         movwf   FSR0
                          M      endif
                          M     else
                          M 
                          M      if     FAMILY == 0
                          M       if ((fuzvals + .12) < 0x20 )
                          M         movlw   fuzvals + .12
                          M       endif
                          M 
                          M       if ( ((fuzvals + .12) >= 0x20 ) && ((fuzvals + .12) < 0x2F ) )
                          M         movlw   fuzvals + .12 + 1 * RAM_GAP_SIZE
                          M       endif
                          M 
                          M       if ( ((fuzvals + .12) >= 0x30 ) && ((fuzvals + .12) < 0x3F ) )
                          M         movlw   fuzvals + .12 + 2 * RAM_GAP_SIZE
                          M       endif
                          M 
                          M       if ( ((fuzvals + .12) >= 0x40 ) && ((fuzvals + .12) < 0x4F ) )
                          M         movlw   fuzvals + .12 + 3 * RAM_GAP_SIZE
                          M       endif
                          M 
                          M             movwf   save_page
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M       if ((fuzvals + .12) < RAM_GAP_START )
                          M             movlw   fuzvals + .12
                          M       else
                          M             movlw   fuzvals + .12 + RAM_GAP_SIZE
                          M       endif
                          M             movwf   FSR
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M       if ((fuzvals + .12) < RAM_GAP_START )
                          M         bcf     BBANK
                          M             movlw   fuzvals + .12
                          M       else
                          M         bsf     BBANK
                          M         movlw   low (fuzvals + .12 + RAM_GAP_SIZE)
                          M       endif
                          M         movwf   FSR0
                          M      endif
                          M     endif
0224   3005           00109                 movlw   .5
0225   00A9           00110                 movwf   otcnt
0226   22B4           00111                 call    com  
0227   0DA3           00112                 rlf     invalidflags,F  
0228   1823           00113                 btfsc   invalidflags,0  
0229   3080           00114                 movlw   0x080
022A   00A2           00115                 movwf   lv2_DatoMotor   
                      00116                         
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022B   0008           00117                 return  
                      00118                         
                      00119                 include "FLMSS.ASM"                ;"FLMSS.ASM"
                      00001 ;*-----------------------------------------------------------------------------*
                      00002 ;*------------------------- fuzzyTECH MCU-MP V4.1 -----------------------------*
                      00003 ;* (c) 1995 Inform Software Corporation, 2001 Midwest Road, Oak Brook, IL60521 *
                      00004 ;*------------ (c) 1995 Inform GmbH, Pascalstr. 23, 52076 Aachen --------------*
                      00005 ;*-----------------------------------------------------------------------------*
                      00006 ;*----- fuzzification routine fast linear membership with slope for PIC16 -----*
                      00007 ;*-----------------------------------------------------------------------------*
                      00008 
                      00009     if      RESOLUTION == 8
                      00010 GET_TERM    MACRO
                      00011         movwf       offset
                      00012         call        tpts_routine
                      00013             ENDM
                      00014     else
                      00015 GET_TERM    MACRO   target
                      00016         movwf       offset
                      00017         bcf         _C
                      00018         rlf         offset,F
                      00019         call        tpts_routine
                      00020         movwf       target + 0
                      00021         incf        offset,F
                      00022         call        tpts_routine
                      00023         movwf       target + 1
                      00024             ENDM
                      00025     endif
                      00026 
                      00027     if      FAMILY == 1
022C                  00028 tpts_routine
                      00029         LD8TBL      tpts,offset
022C   3001               M             movlw   page tpts
022D   008A               M             movwf   PCLATH
022E   3020               M             movlw   ( tpts  & 0x0FF )
022F   072C               M             addwf   offset,W
0230   1803               M             btfsc   _C
0231   0A8A               M             incf    PCLATH,F
0232   0082               M             movwf   PCL
                      00030 
Warning[207]: Found label after column 1. (flmss)
0233                  00031    flmss
                      00032     else
                      00033    flmss_
                      00034     endif
0233                  00035 flmss_start
0233   0825           00036         movf        itptr,W
                      00037     if      FAMILY == 0
                      00038         call        tpts
                      00039         movwf       cur_term
                      00040         subwf       crisp,W
                      00041         btfss       _C
                      00042         goto        mindone
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00043         btfss       _Z
                      00044         goto        cmp_flmss
                      00045     else
                      00046      if     RESOLUTION == 8
                      00047         GET_TERM
0234   00AC               M         movwf       offset
0235   222C               M         call        tpts_routine
0236   00A7           00048         movwf       cur_term
0237   0224           00049         subwf       crisp,W
0238   1C03           00050         btfss       _C
0239   2A75           00051         goto        mindone
023A   1D03           00052         btfss       _Z
023B   2A43           00053         goto        cmp_flmss
                      00054      else
                      00055         GET_TERM    cur_term
                      00056         FSUB16F     cur_term,crisp,Temp16
                      00057         btfss       _C
                      00058         goto        mindone
                      00059         FTSTFSZ16   Temp16
                      00060         goto        cmp_flmss
                      00061      endif
                      00062     endif
023C   0A25           00063         incf        itptr,W
                      00064     if      FAMILY == 1
                      00065      if     RESOLUTION == 8
                      00066         GET_TERM
023D   00AC               M         movwf       offset
023E   222C               M         call        tpts_routine
023F   39FF           00067         andlw       0x0FF
                      00068      else
                      00069         GET_TERM    Temp16
                      00070         iorwf       Temp16+0,W
                      00071      endif
                      00072     else
                      00073         call        tpts
                      00074         andlw       0x0FF
                      00075     endif
0240   1D03           00076         btfss       _Z
0241   2A75           00077         goto        mindone
0242   2A73           00078         goto        maxdone
0243                  00079 cmp_flmss
0243   3002           00080         movlw       .2
0244   0725           00081         addwf       itptr,W
                      00082     if      FAMILY == 0
                      00083         call        tpts
                      00084         movwf       cur_term2
                      00085         movf        crisp,W
                      00086         subwf       cur_term2,W
                      00087         btfss       _C
                      00088     else
                      00089      if     RESOLUTION == 8
                      00090         GET_TERM
0245   00AC               M         movwf       offset
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0246   222C               M         call        tpts_routine
0247   00A8           00091         movwf       cur_term2
0248   0824           00092         movf        crisp,W
0249   0228           00093         subwf       cur_term2,W
024A   1C03           00094         btfss       _C
                      00095      else
                      00096         GET_TERM    cur_term2
                      00097         FCPFSLE16   crisp,cur_term2
                      00098      endif
                      00099     endif
024B   2A5F           00100         goto        ds
024C                  00101 as
024C   3001           00102         movlw       .1
024D   0725           00103         addwf       itptr,W
                      00104     if      FAMILY == 1
                      00105      if     RESOLUTION == 8
                      00106         GET_TERM
024E   00AC               M         movwf       offset
024F   222C               M         call        tpts_routine
0250   39FF           00107         andlw       0x0FF
                      00108      else
                      00109         GET_TERM    Temp16
                      00110         iorwf       Temp16+0,W
                      00111      endif
                      00112     else
                      00113         call        tpts
                      00114         andlw       0x0FF
                      00115     endif
0251   1903           00116         btfsc       _Z
0252   2A73           00117         goto        maxdone
                      00118 
                      00119     if      RESOLUTION == 8
0253   00AB           00120         movwf       mulplr
0254   0827           00121         movf        cur_term,W
0255   0224           00122         subwf       crisp,W
0256   00AA           00123         movwf       mulcnd
0257   22EE           00124         call        mpy8_8
0258   1003           00125         bcf         _C
0259   0C2E           00126         rrf         res_mpy+0,W
025A   39FF           00127         andlw       0x0FF
025B   1D03           00128         btfss       _Z
025C   2A73           00129         goto        maxdone
025D   0C2F           00130         rrf         res_mpy+1,W
                      00131     else
                      00132         FMOV16      Temp16,mulplr
                      00133         FSUB16F     cur_term,crisp,mulcnd
                      00134         call        mpy16_16
                      00135         bcf         _C
                      00136         rrf         res_mpy+0,W
                      00137         movwf       Temp16+0
                      00138         rrf         res_mpy+1,W
                      00139         movwf       Temp16+1
                      00140         iorwf       Temp16+0,W
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00141         btfss       _Z
                      00142         goto        maxdone
                      00143         rrf         res_mpy+2,W
                      00144         movwf       Temp16+0
                      00145         rrf         res_mpy+3,W
                      00146         movwf       Temp16+1
                      00147     endif
025E   2A76           00148         goto        store
025F                  00149 ds
025F   3003           00150         movlw       .3
0260   0725           00151         addwf       itptr,W
                      00152     if      FAMILY == 1
                      00153      if     RESOLUTION == 8
                      00154         GET_TERM
0261   00AC               M         movwf       offset
0262   222C               M         call        tpts_routine
0263   39FF           00155         andlw       0x0FF
                      00156      else
                      00157         GET_TERM    Temp16
                      00158         iorwf       Temp16+0,W
                      00159      endif
                      00160     else
                      00161         call        tpts
                      00162         andlw       0x0FF
                      00163     endif
0264   1903           00164         btfsc       _Z
0265   2A75           00165         goto        mindone
                      00166     if      RESOLUTION == 8
0266   00AB           00167         movwf       mulplr
0267   0828           00168         movf        cur_term2,W
0268   0224           00169         subwf       crisp,W
0269   00AA           00170         movwf       mulcnd
026A   22EE           00171         call        mpy8_8
026B   1003           00172         bcf         _C
026C   0C2E           00173         rrf         res_mpy+0,W
026D   39FF           00174         andlw       0x0FF
026E   1D03           00175         btfss       _Z
026F   2A75           00176         goto        mindone
0270   0CAF           00177         rrf         res_mpy+1,F
0271   092F           00178         comf        res_mpy+1,W
                      00179     else
                      00180         FMOV16      Temp16,mulplr
                      00181         FSUB16F     cur_term2,crisp,mulcnd
                      00182         call        mpy16_16
                      00183         bcf         _C
                      00184         rrf         res_mpy+0,W
                      00185         movwf       Temp16+0
                      00186         rrf         res_mpy+1,W
                      00187         movwf       Temp16+1
                      00188         iorwf       Temp16+0,W
                      00189         btfss       _Z
                      00190         goto        mindone
                      00191         rrf         res_mpy+2,W
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00192         movwf       Temp16+0
                      00193         rrf         res_mpy+3,W
                      00194         movwf       Temp16+1
                      00195         FCOMF16     Temp16
                      00196     endif
0272   2A76           00197         goto        store
0273                  00198 maxdone
                      00199     if      RESOLUTION == 8
0273   30FF           00200         movlw       0x0FF
                      00201     else
                      00202         movlw       0x0FF
                      00203         movwf       Temp16+0
                      00204         movwf       Temp16+1
                      00205     endif
0274   2A76           00206         goto        store
0275                  00207 mindone
                      00208     if      RESOLUTION == 8
0275   3000           00209         movlw       0x000
                      00210     else
                      00211         movlw       0x000
                      00212         movwf       Temp16+0
                      00213         movwf       Temp16+1
                      00214     endif
0276                  00215 store
                      00216     if      RESOLUTION == 8
                      00217         SET_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M             movf    save_page,W
                          M             movwf   FSR
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         btfsc   BBANK
                          M         bsf     BSR,4
                          M      endif
                          M     endif
                          M 
0276   0080           00218         movwf       0
                      00219         INC_FSR
                          M     if      BANKED == 0
                          M 
                          M      if     FAMILY < 2
0277   0A84               M             incf    FSR,F
                          M       if    RESOLUTION == 16
                          M             incf    FSR,F
                          M       endif
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M      else
                          M      endif
                          M 
                          M     else
                          M 
                          M      if     FAMILY == 0
                          M             incf        FSR,F
                          M             bsf         FSR,4
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M             LOCAL   p1_test
                          M             LOCAL   end_test
                          M             btfss   FSR,7
                          M             goto    p1_test
                          M             incf    FSR,F
                          M       if    RESOLUTION == 16
                          M             incf    FSR,F
                          M       endif
                          M             goto    end_test
                          M           p1_test
                          M             incf    FSR,F
                          M       if    RESOLUTION == 16
                          M             incf    FSR,F
                          M       endif
                          M             btfss   FSR,7
                          M             goto    end_test
                          M             movlw   RAM_GAP_SIZE
                          M             addwf   FSR,F
                          M           end_test
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         LOCAL       first_page
                          M         movpf       FSR0,FSR0
                          M         btfss       _Z
                          M         goto        first_page
                          M         movwf       FSR1
                          M         movlw       RAM_GAP_SIZE
                          M         addwf       FSR0,F
                          M         movpf       FSR1,WREG
                          M         bsf         BBANK
                          M       first_page
                          M      endif
                          M 
                          M     endif
                      00220         RES_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M         movf    FSR,W
                          M         clrf    FSR
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             movwf   save_page
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         bcf     BSR,4
                          M      endif
                          M     endif
                      00221     else
                      00222         SET_PAGE
                      00223         FMOV16F0    Temp16
                      00224         INC_FSR
                      00225         RES_PAGE
                      00226     endif
0278   3004           00227         movlw       4
0279   07A5           00228         addwf       itptr,F
027A   0BA6           00229         decfsz      itcnt,F
027B   2A33           00230         goto        flmss_start
                      00231     if      FAMILY == 1
027C   0008           00232         return
                      00233     else
                      00234         retlw       0
                      00235     endif
                      00236 
                      00237 ; The end of module flmss
                      00238 
                      00120                 include "Min.asm"                  ;"MIN.ASM"
                      00001 ;*-----------------------------------------------------------------------------*
                      00002 ;*------------------------- fuzzyTECH MCU-MP V4.1 -----------------------------*
                      00003 ;* (c) 1995 Inform Software Corporation, 2001 Midwest Road, Oak Brook, IL60521 *
                      00004 ;*------------ (c) 1995 Inform GmbH, Pascalstr. 23, 52076 Aachen --------------*
                      00005 ;*-----------------------------------------------------------------------------*
                      00006 ;*-------------------- routine inference minimum for PIC16 --------------------*
                      00007 ;*-----------------------------------------------------------------------------*
                      00008 
                      00009 
                      00010 GET_TAB     MACRO
                      00011      if FAMILY < 1
                      00012         movf        rtptr,W
                      00013         call        rt0
                      00014      else
                      00015         call        rt_routine
                      00016      endif
                      00017         incf        rtptr,F
                      00018      if LARGE_RT == 1
                      00019         btfsc       _Z
                      00020         incf        rtptr+1,F
                      00021      endif
                      00022             ENDM
                      00023 
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00024     if      FAMILY == 1
027D                  00025 rt_routine
                      00026      if     LARGE_RT == 0
                      00027         LD8PTR      rt_table,rtptr
027D   0829               M             movf    rt_table+1,W
027E   008A               M             movwf   PCLATH
027F   0828               M             movf    rt_table,W
0280   0725               M             addwf   rtptr,W
0281   1803               M             btfsc   _C
0282   0A8A               M             incf    PCLATH,F
0283   0082               M             movwf   PCL
                      00028      else
                      00029         LD16PTR     rt_table,rtptr
                      00030      endif
                      00031     endif
                      00032 
0284                  00033 Min
                      00034         IS_PAGE     fuzvals
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M           if ( fuzvals < 0x20 )
                          M             movlw   0x020
                          M           endif
                          M           if ( (fuzvals >= 0x20) && (fuzvals < 0x40) )
                          M             movlw   0x040
                          M           endif
                          M           if ( (fuzvals >= 0x40) && (fuzvals < 0x60) )
                          M             movlw   0x060
                          M           endif
                          M           if ( (fuzvals >= 0x60) && (fuzvals < 0x80) )
                          M             movlw   0x080
                          M           endif
                          M 
                          M             movwf   page_bound
                          M      else
                          M      endif
                          M     endif
0284   01A5           00035         clrf        rtptr
                      00036      if     LARGE_RT == 1
                      00037         clrf        rtptr+1
                      00038      endif
                      00039         GET_TAB
                          M      if FAMILY < 1
                          M         movf        rtptr,W
                          M         call        rt0
                          M      else
0285   227D               M         call        rt_routine
                          M      endif
0286   0AA5               M         incf        rtptr,F
                          M      if LARGE_RT == 1
                          M         btfsc       _Z
                          M         incf        rtptr+1,F
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M      endif
0287   00A7           00040         movwf       rulecount
0288                  00041 start_rule_min
                      00042     if      RESOLUTION == 8
0288   30FF           00043         movlw       0x0FF
0289   00A4           00044         movwf       min_tmp
                      00045     else
                      00046         movlw       0x0FF
                      00047         movwf       min_tmp+0
                      00048         movwf       min_tmp+1
                      00049     endif
                      00050         GET_TAB
                          M      if FAMILY < 1
                          M         movf        rtptr,W
                          M         call        rt0
                          M      else
028A   227D               M         call        rt_routine
                          M      endif
028B   0AA5               M         incf        rtptr,F
                          M      if LARGE_RT == 1
                          M         btfsc       _Z
                          M         incf        rtptr+1,F
                          M      endif
028C   00AE           00051         movwf       no_i
                      00052         GET_TAB
                          M      if FAMILY < 1
                          M         movf        rtptr,W
                          M         call        rt0
                          M      else
028D   227D               M         call        rt_routine
                          M      endif
028E   0AA5               M         incf        rtptr,F
                          M      if LARGE_RT == 1
                          M         btfsc       _Z
                          M         incf        rtptr+1,F
                          M      endif
028F   00AD           00053         movwf       no_o
0290                  00054 cmp_min
                      00055         GET_TAB
                          M      if FAMILY < 1
                          M         movf        rtptr,W
                          M         call        rt0
                          M      else
0290   227D               M         call        rt_routine
                          M      endif
0291   0AA5               M         incf        rtptr,F
                          M      if LARGE_RT == 1
                          M         btfsc       _Z
                          M         incf        rtptr+1,F
                          M      endif
                      00056         COMP_FSR
                          M     if      BANKED == 0
                          M      if      FAMILY < 2
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0292   0084               M         movwf   FSR
0293   3030               M             movlw   fuzvals
0294   0784               M             addwf   FSR,F
                          M      else
                          M         movwf   FSR0
                          M             movlw   fuzvals
                          M         addwf   FSR0,F
                          M      endif
                          M     else
                          M 
                          M      if      FAMILY == 0
                          M             LOCAL   add_page_loop
                          M             LOCAL   add_page_end
                          M         movwf   save_page
                          M             movlw   fuzvals
                          M             addwf   save_page,F
                          M         movf    page_bound,W
                          M          add_page_loop
                          M             subwf   save_page,W
                          M             btfss   _C
                          M             goto    add_page_end
                          M             movlw   RAM_GAP_SIZE
                          M             addwf   save_page,F
                          M             movlw   0x020
                          M             addwf   page_bound,W
                          M             goto    add_page_loop
                          M          add_page_end
                          M      endif
                          M 
                          M      if      FAMILY == 1
                          M             LOCAL   add_page_end
                          M         movwf   FSR
                          M             movlw   fuzvals
                          M             addwf   FSR,F
                          M             movlw   RAM_GAP_START
                          M             subwf   FSR,W
                          M             btfss   _C
                          M             goto    add_page_end
                          M             movlw   RAM_GAP_SIZE
                          M             addwf   FSR,F
                          M          add_page_end
                          M      endif
                          M 
                          M      if      FAMILY == 2
                          M         LOCAL   cross_page
                          M         bcf     BBANK
                          M         movwf   FSR0
                          M             movlw   fuzvals
                          M         addwf   FSR0,F
                          M         btfss   _C
                          M         goto    cross_page
                          M         movlw   RAM_GAP_SIZE
                          M         addwf   FSR0,F
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     BBANK
                          M       cross_page
                          M      endif
                          M 
                          M     endif
                      00057         SET_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M             movf    save_page,W
                          M             movwf   FSR
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         btfsc   BBANK
                          M         bsf     BSR,4
                          M      endif
                          M     endif
                          M 
                      00058     if      RESOLUTION == 8
0295   0800           00059         movf        0,W
                      00060     else
                      00061         FMOV0F16    Temp16
                      00062     endif
                      00063         RES_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M         movf    FSR,W
                          M         clrf    FSR
                          M             movwf   save_page
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         bcf     BSR,4
                          M      endif
                          M     endif
                      00064     if     BANKED == 1
                      00065         btfss       _Z
                      00066        goto        cmp_min_ff
                      00067         clrf        min_tmp
                      00068         movf        no_i,W
                      00069         decf        rtptr,F
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070         addwf       rtptr,F
                      00071      if     LARGE_RT == 1
                      00072         btfsc       _Z
                      00073         incf        rtptr+1,F
                      00074      endif
                      00075        goto        comp_min
                      00076 cmp_min_ff
                      00077      if     FAMILY == 0
                      00078         movwf       save_wreg
                      00079      endif
                      00080     endif
                      00081     if      RESOLUTION == 8
0296   0224           00082         subwf       min_tmp,W
0297   1C03           00083         btfss       _C
                      00084     else
                      00085         FCPFSLT16   Temp16,min_tmp
                      00086     endif
0298   2A9B           00087        goto        next_in_min
                      00088     if      FAMILY == 0
                      00089      if     BANKED == 0
                      00090         movf        0,W
                      00091         movwf       min_tmp
                      00092      else
                      00093         movf        save_wreg,W
                      00094         movwf       min_tmp
                      00095      endif
                      00096     else
                      00097      if    RESOLUTION == 8
0299   0800           00098         movf        0,W
029A   00A4           00099         movwf       min_tmp
                      00100      else
                      00101         FMOV0F16    min_tmp
                      00102      endif
                      00103     endif
029B                  00104 next_in_min
029B   0BAE           00105         decfsz      no_i,F
029C   2A90           00106        goto        cmp_min
029D                  00107 comp_min
                      00108         GET_TAB
                          M      if FAMILY < 1
                          M         movf        rtptr,W
                          M         call        rt0
                          M      else
029D   227D               M         call        rt_routine
                          M      endif
029E   0AA5               M         incf        rtptr,F
                          M      if LARGE_RT == 1
                          M         btfsc       _Z
                          M         incf        rtptr+1,F
                          M      endif
                      00109         COMP_FSR
                          M     if      BANKED == 0
                          M      if      FAMILY < 2
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029F   0084               M         movwf   FSR
02A0   3030               M             movlw   fuzvals
02A1   0784               M             addwf   FSR,F
                          M      else
                          M         movwf   FSR0
                          M             movlw   fuzvals
                          M         addwf   FSR0,F
                          M      endif
                          M     else
                          M 
                          M      if      FAMILY == 0
                          M             LOCAL   add_page_loop
                          M             LOCAL   add_page_end
                          M         movwf   save_page
                          M             movlw   fuzvals
                          M             addwf   save_page,F
                          M         movf    page_bound,W
                          M          add_page_loop
                          M             subwf   save_page,W
                          M             btfss   _C
                          M             goto    add_page_end
                          M             movlw   RAM_GAP_SIZE
                          M             addwf   save_page,F
                          M             movlw   0x020
                          M             addwf   page_bound,W
                          M             goto    add_page_loop
                          M          add_page_end
                          M      endif
                          M 
                          M      if      FAMILY == 1
                          M             LOCAL   add_page_end
                          M         movwf   FSR
                          M             movlw   fuzvals
                          M             addwf   FSR,F
                          M             movlw   RAM_GAP_START
                          M             subwf   FSR,W
                          M             btfss   _C
                          M             goto    add_page_end
                          M             movlw   RAM_GAP_SIZE
                          M             addwf   FSR,F
                          M          add_page_end
                          M      endif
                          M 
                          M      if      FAMILY == 2
                          M         LOCAL   cross_page
                          M         bcf     BBANK
                          M         movwf   FSR0
                          M             movlw   fuzvals
                          M         addwf   FSR0,F
                          M         btfss   _C
                          M         goto    cross_page
                          M         movlw   RAM_GAP_SIZE
                          M         addwf   FSR0,F
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     BBANK
                          M       cross_page
                          M      endif
                          M 
                          M     endif
                      00110      if RESOLUTION == 8
                      00111         SET_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M             movf    save_page,W
                          M             movwf   FSR
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         btfsc   BBANK
                          M         bsf     BSR,4
                          M      endif
                          M     endif
                          M 
02A2   0800           00112         movf        0,W
                      00113         RES_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M         movf    FSR,W
                          M         clrf    FSR
                          M             movwf   save_page
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         bcf     BSR,4
                          M      endif
                          M     endif
02A3   0224           00114        subwf       min_tmp,W
02A4   1C03           00115         btfss       _C
02A5   2AA8           00116        goto        next_out_min
02A6   0824           00117        movf        min_tmp,W
                      00118         SET_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             movf    save_page,W
                          M             movwf   FSR
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         btfsc   BBANK
                          M         bsf     BSR,4
                          M      endif
                          M     endif
                          M 
02A7   0080           00119         movwf       0
                      00120         RES_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M         movf    FSR,W
                          M         clrf    FSR
                          M             movwf   save_page
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         bcf     BSR,4
                          M      endif
                          M     endif
                      00121     else
                      00122         SET_PAGE
                      00123         FMOV0F16    Temp16
                      00124         RES_PAGE
                      00125        FCPFSGT16   min_tmp,Temp16
                      00126        goto        next_out_min
                      00127         SET_PAGE
                      00128        FMOV16F0    min_tmp
                      00129         RES_PAGE
                      00130     endif
02A8                  00131 next_out_min
02A8   0BAD           00132         decfsz      no_o,F
02A9   2A9D           00133        goto        comp_min
02AA   0BA7           00134         decfsz      rulecount,F
02AB   2A88           00135        goto        start_rule_min
                      00136     if      FAMILY == 1
02AC   0008           00137         return
                      00138     endif
                      00139 
                      00140 ; The end of module inference minimum
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00141 
                      00121                 include "COM.ASM"                  ;"COM.ASM"
                      00001 ;*-----------------------------------------------------------------------------*
                      00002 ;*------------------------- fuzzyTECH MCU-MP V4.1 -----------------------------*
                      00003 ;* (c) 1995 Inform Software Corporation, 2001 Midwest Road, Oak Brook, IL60521 *
                      00004 ;*------------ (c) 1995 Inform GmbH, Pascalstr. 23, 52076 Aachen --------------*
                      00005 ;*-----------------------------------------------------------------------------*
                      00006 ;*----------- defuzzification routine center of maximum for PIC16 -------------*
                      00007 ;*-----------------------------------------------------------------------------*
                      00008 
                      00009 GET_XCOM    MACRO   target
                      00010     if      RESOLUTION == 8
                      00011         movwf       offset
                      00012         call        xcom_routine
                      00013         movwf       target
                      00014     else
                      00015         movwf       offset
                      00016         bcf         _C
                      00017         rlf         offset,F
                      00018         call        xcom_routine
                      00019         movwf       target+0
                      00020         incf        offset,F
                      00021         call        xcom_routine
                      00022         movwf       target+1
                      00023     endif
                      00024             ENDM
                      00025 
                      00026     if      FAMILY == 1
02AD                  00027 xcom_routine
                      00028         LD8TBL  xcom,offset
02AD   3001               M             movlw   page xcom
02AE   008A               M             movwf   PCLATH
02AF   3050               M             movlw   ( xcom  & 0x0FF )
02B0   072C               M             addwf   offset,W
02B1   1803               M             btfsc   _C
02B2   0A8A               M             incf    PCLATH,F
02B3   0082               M             movwf   PCL
                      00029     endif
                      00030 
02B4                  00031 com
                      00032     if      RESOLUTION == 8
                      00033         FCLR24      num
                          M     if      FAMILY < 2
02B4   01A4               M         clrf    num+0
02B5   01A5               M         clrf    num+1
02B6   01A6               M         clrf    num+2
                          M     else
                          M         clrf    num+0,F
                          M         clrf    num+1,F
                          M         clrf    num+2,F
                          M     endif
                      00034         FCLR16      denom
                          M     if      FAMILY < 2
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B7   01A7               M         clrf    denom+0
02B8   01A8               M         clrf    denom+1
                          M     else
                          M         clrf    denom+0,F
                          M         clrf    denom+1,F
                          M     endif
                      00035     else
                      00036         FCLR32      num
                      00037         FCLR16      denom
                      00038     endif
02B9                  00039 start_com
                      00040     if    RESOLUTION == 8
                      00041      if      FAMILY == 0
                      00042       if     BANKED == 0
                      00043         decf        otcnt,F
                      00044         movf        0,W
                      00045         clrf        0
                      00046         decf        FSR,F
                      00047         andlw       0x0FF
                      00048       else
                      00049         decf        otcnt,F
                      00050         SET_PAGE
                      00051         movf        0,W
                      00052         clrf        0
                      00053         bcf         FSR,4
                      00054         decf        FSR,F
                      00055         bsf         FSR,4
                      00056         RES_PAGE
                      00057       endif
                      00058      else
                      00059         SET_PAGE
                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M             movf    save_page,W
                          M             movwf   FSR
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         btfsc   BBANK
                          M         bsf     BSR,4
                          M      endif
                          M     endif
                          M 
02B9   0800           00060         movf        0,W
02BA   0180           00061         clrf        0
                      00062         INC_FSR
                          M     if      BANKED == 0
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M      if     FAMILY < 2
02BB   0A84               M             incf    FSR,F
                          M       if    RESOLUTION == 16
                          M             incf    FSR,F
                          M       endif
                          M      else
                          M      endif
                          M 
                          M     else
                          M 
                          M      if     FAMILY == 0
                          M             incf        FSR,F
                          M             bsf         FSR,4
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M             LOCAL   p1_test
                          M             LOCAL   end_test
                          M             btfss   FSR,7
                          M             goto    p1_test
                          M             incf    FSR,F
                          M       if    RESOLUTION == 16
                          M             incf    FSR,F
                          M       endif
                          M             goto    end_test
                          M           p1_test
                          M             incf    FSR,F
                          M       if    RESOLUTION == 16
                          M             incf    FSR,F
                          M       endif
                          M             btfss   FSR,7
                          M             goto    end_test
                          M             movlw   RAM_GAP_SIZE
                          M             addwf   FSR,F
                          M           end_test
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         LOCAL       first_page
                          M         movpf       FSR0,FSR0
                          M         btfss       _Z
                          M         goto        first_page
                          M         movwf       FSR1
                          M         movlw       RAM_GAP_SIZE
                          M         addwf       FSR0,F
                          M         movpf       FSR1,WREG
                          M         bsf         BBANK
                          M       first_page
                          M      endif
                          M 
                          M     endif
                      00063         RES_PAGE
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if      BANKED == 0
                          M     else
                          M      if     FAMILY == 0
                          M         movwf   save_wreg
                          M         movf    FSR,W
                          M         clrf    FSR
                          M             movwf   save_page
                          M         movf    save_wreg,W
                          M      endif
                          M 
                          M      if     FAMILY == 1
                          M      endif
                          M 
                          M      if     FAMILY == 2
                          M         bcf     BSR,4
                          M      endif
                          M     endif
                      00064       if    BANKED == 0
02BC   39FF           00065         andlw       0x0FF
                      00066       endif
                      00067      endif
                      00068     else
                      00069     FMOV0F16    Temp16
                      00070     FCLR0F16
                      00071     INC_FSR
                      00072         bcf         _C
                      00073         FRR16       Temp16
                      00074         bcf         _C
                      00075         FRR16       Temp16
                      00076         bcf         _C
                      00077         FRR16       Temp16
                      00078         movf        Temp16+0,W
                      00079         iorwf       Temp16+1,W
                      00080     endif
02BD   1903           00081         btfsc       _Z
02BE   2AD4           00082         goto        ready_com
                      00083     if      RESOLUTION == 8
02BF   00AB           00084         movwf       mulplr
                      00085         FADD8TO16   mulplr, denom
                          M     if      FAMILY == 2
                          M         movfp   mulplr,WREG
                          M         addwf   denom+1,F
                          M         movlw   0
                          M         addwfc  denom+0,F
                          M     else
02C0   082B               M             movf    mulplr,W
02C1   07A8               M             addwf   denom+1,F
02C2   1803               M         btfsc   _C
02C3   0AA7               M             incf    denom+0,F
                          M     endif
                      00086     else
                      00087         FMOV16      Temp16,mulplr
                      00088         FADD16      Temp16,denom
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00089     endif
                      00090     if      FAMILY < 1
                      00091         movf        otcnt,W
                      00092         call        xcom
                      00093         movwf       mulcnd
                      00094         call        mpy8_8
                      00095         FADD16TO24  res_mpy,num
                      00096     else
02C4   082D           00097         movf        otoffset,W
                      00098      if     RESOLUTION == 8
                      00099         GET_XCOM    mulcnd
                          M     if      RESOLUTION == 8
02C5   00AC               M         movwf       offset
02C6   22AD               M         call        xcom_routine
02C7   00AA               M         movwf       mulcnd
                          M     else
                          M         movwf       offset
                          M         bcf         _C
                          M         rlf         offset,F
                          M         call        xcom_routine
                          M         movwf       mulcnd+0
                          M         incf        offset,F
                          M         call        xcom_routine
                          M         movwf       mulcnd+1
                          M     endif
02C8   22EE           00100         call        mpy8_8
                      00101         FADD16TO24  res_mpy,num
                          M     if      FAMILY == 2
                          M         movfp   res_mpy+1,WREG
                          M         addwf   num+2,F
                          M         movfp   res_mpy+0,WREG
                          M         addwfc  num+1,F
                          M         movlw   0x00
                          M         addwfc  num+0,F
                          M     else
02C9   082F               M             movf    res_mpy+1,W
02CA   07A6               M             addwf   num+2,F
02CB   3001               M         movlw   0x01
02CC   1803               M             btfsc   _C
02CD   07A5               M             addwf   num+1,F
02CE   1803               M             btfsc   _C
02CF   07A4               M             addwf   num+0,F
02D0   082E               M             movf    res_mpy+0,W
02D1   07A5               M             addwf   num+1,F
02D2   1803               M         btfsc   _C
02D3   0AA4               M             incf    num+0,F
                          M     endif
                      00102      else
                      00103         GET_XCOM    mulcnd
                      00104         call        mpy16_16
                      00105         FADD32      res_mpy,num
                      00106      endif
                      00107     endif
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D4                  00108 ready_com
                      00109     if      FAMILY > 0
02D4   0AAD           00110         incf        otoffset,F
02D5   0BA9           00111         decfsz      otcnt,F
                      00112     else
                      00113         movf        otcnt,F
                      00114         btfss       _Z
                      00115     endif
02D6   2AB9           00116         goto        start_com
                      00117     if      RESOLUTION == 8
02D7                  00118 ishift_com
02D7   08A4           00119         movf        num+0,F
02D8   1D03           00120         btfss       _Z
02D9   2ADD           00121         goto        ishift_com2
02DA   0827           00122         movf        denom+0,W
02DB   1903           00123         btfsc       _Z
02DC   2AE5           00124         goto        compute_com
02DD                  00125 ishift_com2
02DD   1003           00126         bcf         _C
02DE   0CA4           00127         rrf         num+0,F
02DF   0CA5           00128         rrf         num+1,F
02E0   0CA6           00129         rrf         num+2,F
02E1   1003           00130         bcf         _C
02E2   0CA7           00131         rrf         denom+0,F
02E3   0CA8           00132         rrf         denom+1,F
02E4   2AD7           00133         goto        ishift_com
                      00134     endif
02E5                  00135 compute_com
                      00136     if      RESOLUTION == 8
02E5   0828           00137         movf        denom+1,W
02E6   1D03           00138         btfss       _Z
                      00139     else
                      00140         FTSTFSZ16   denom+0
                      00141     endif
02E7   2AEA           00142         goto        rout_div_com
02E8   1403           00143         bsf         _C
                      00144     if      FAMILY == 1
02E9   0008           00145         return
                      00146     else
                      00147         goto        end_com
                      00148     endif
02EA                  00149 rout_div_com
                      00150     if      FAMILY == 1
                      00151      if     RESOLUTION == 8
02EA   22FC           00152         call        div16_8
                      00153      else
                      00154         call        div32_16
                      00155      endif
                      00156     else
                      00157         include     "div16_8.asm"
                      00158     endif
02EB   1003           00159         bcf         _C
                      00160     if      RESOLUTION == 8
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EC   0826           00161     movf        res_div+1,W
                      00162     else
                      00163         FMOV16      res_div+2,Temp16
                      00164     endif
                      00165     if      FAMILY == 1
02ED   0008           00166         return
                      00167     else
                      00168  end_com
                      00169     endif
                      00170 
                      00171 ; The end of module com
                      00172 
                      00122                 include "MPY8_8.ASM"               ;"MPY8_8.ASM"
                      00001         LIST
                      00002 ; MPY8_8.ASM    8 * 8 Bit Multiplication        v4.1 Inform Software Corporation
                      00073         LIST
                      00074 
                      00123                 include "DIV16_8.ASM"              ;"DIV16_8.ASM"
                      00001         LIST
                      00002 ; DIV16_8.ASM   16 by 8 Bit Division Routine    v4.1 Inform Software Corporation
Warning[207]: Found label after column 1. (no_carry)
Warning[207]: Found label after column 1. (no_sub)
                      00083         LIST
                      00084 
                      00124                         
                      00125 ;data size knowledge base (bytes):
                      00126 ;RAM:        21   00015H
                      00127 ;ROM:       229   000E5H
                      00128 ;TOTAL:     250   000FAH
                      00129 ;
                      00080 
                      00081 ;------------------------------------------------------------------------------
                      00082 ;- RESET VECTOR                                                               -
                      00083 ;------------------------------------------------------------------------------
                      00084 
0000                  00085             ORG     RESET_ADR
                      00086 
0000   2900           00087         goto    mymain              ;jump to program code
                      00088 
                      00089         END                         ;end for assembler
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADD_TBL16                         
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BANKED                            00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CODE_START                        00000100
COMP_FSR                          
CREN                              00000004
CSRC                              00000007
DC                                00000001
DEC_FSR                           
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FAARG                             00000025
FAARGLO                           00000026
FADD16                            
FADD16TO24                        
FADD32                            
FADD8TO16                         
FAMILY                            00000001
FBARG                             00000027
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

FBARGLO                           00000028
FCLR                              
FCLR0F16                          
FCLR16                            
FCLR24                            
FCLR32                            
FCLR_AUTO                         
FCLR_INC_FSR                      
FCOMF16                           
FCPFSGT16                         
FCPFSLE16                         
FCPFSLT16                         
FDEC16                            
FERR                              00000002
FMOV0F16                          
FMOV16                            
FMOV16F0                          
FMOV16K                           
FPREP_PAGE                        
FREM                              0000002A
FRR16                             
FRR24                             
FRR32                             
FSET                              
FSET0F16                          
FSET_AUTO_DEC                     
FSET_AUTO_INC                     
FSR                               00000004
FSUB16F                           
FTEMP                             00000029
FTMOV16                           
FTSTFSZ16                         
FTcount                           0000002C
FUZZY_RAM_END                     00000040
FUZZY_RAM_START                   00000020
GET_TAB                           
GET_TERM                          
GET_XCOM                          
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
IBF                               00000007
IBOV                              00000005
INC_FSR                           
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
IS_PAGE                           
LARGE_RT                          00000000
LD16PTR                           
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

LD16TBL                           
LD8PTR                            
LD8TBL                            
LD_TBL16                          
LSB_MSB                           00000001
MSB_LSB                           00000000
Min                               00000284
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
RAM_END                           00000080
RAM_GAP_START                     00000080
RAM_START                         00000020
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RESET_ADR                         00000000
RESOLUTION                        00000008
RES_PAGE                          
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
SET_PAGE                          
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
STATUS                            00000003
STOP                              0000010E
STOP1                             00000114
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_C                                STATUS,C
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_XT_OSC                           00003FFD
_Z                                STATUS,Z
__16F871                          00000001
__DEBUG                           1
as                                0000024C
case_fire                         0000011C
case_no_fire                      0000011F
cmp_flmss                         00000243
cmp_min                           00000290
cmp_reg                           0000002C
com                               000002B4
comp_min                          0000029D
compute_com                       000002E5
crisp                             00000024
cur_term                          00000027
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

cur_term2                         00000028
denom                             00000027
denomLO                           00000028
div16_8                           000002FC
divLoop                           000002FF
ds                                0000025F
flmss                             00000233
flmss_start                       00000233
fuzvals                           00000030
initloop                          00000209
initmotorcon                      00000205
invalidflags                      00000023
ishift_com                        000002D7
ishift_com2                       000002DD
itcnt                             00000026
itptr                             00000025
loopcnt                           00000024
lv0_DatoError                     00000020
lv1_DatoReferencia                00000021
lv2_DatoMotor                     00000022
main_loop                         0000010C
max_tmp                           00000024
maxdone                           00000273
maxout                            00000024
maxoutpos                         00000026
min_tmp                           00000024
mindone                           00000275
motorcon                          0000020E
mpy8_8                            000002EE
mpyLoop                           000002F3
mulcnd                            0000002A
mulplr                            0000002B
mymain                            00000100
next_in_min                       0000029B
next_out_min                      000002A8
no_carry                          00000308
no_i                              0000002E
no_o                              0000002D
no_sub                            0000030B
num                               00000024
numHI                             00000025
numLO                             00000026
offset                            0000002C
otcnt                             00000029
otoffset                          0000002D
ready_com                         000002D4
res_div                           00000025
res_divLO                         00000026
res_mpy                           0000002E
res_mpyLO                         0000002F
rout_div_com                      000002EA
rt0                               00000155
rt_routine                        0000027D
MPASM  5.34                        MYMAIN.ASM   11-30-2009  5:13:16         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

rt_table                          00000028
rt_tableLO                        00000029
rtptr                             00000025
rulecount                         00000027
start_com                         000002B9
start_rule_min                    00000288
store                             00000276
tmp_var                           0000002E
tpts                              00000120
tpts_routine                      0000022C
user1                             00000041
var1                              00000024
var10                             0000002D
var11                             0000002E
var12                             0000002F
var2                              00000025
var3                              00000026
var4                              00000027
var5                              00000028
var6                              00000029
var7                              0000002A
var8                              0000002B
var9                              0000002C
xcom                              00000150
xcom_routine                      000002AD


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X--------------- ---------------- ---------------- ----------------
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   529
Program Memory Words Free:  1519


Errors   :     0
Warnings :    74 reported,     0 suppressed
Messages :     1 reported,     3 suppressed

